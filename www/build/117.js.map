{"version":3,"sources":["../../src/pages/email/email-menu/email-menu.ts","../../src/pages/email/email-menu/email-menu.module.ts","webpack:///./src/pages/email/emailService.ts?e344*"],"names":[],"mappings":"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","file":"117.js","sourcesContent":["import { TreeModel } from 'ng2-tree';\nimport { Storage } from '@ionic/storage';\nimport { EmailService } from './../emailService';\nimport { EmailPage } from './../email';\nimport { NavParams } from 'ionic-angular/navigation/nav-params';\nimport { NavController, Events, MenuController } from 'ionic-angular';\nimport { IonicPage } from 'ionic-angular';\nimport { Component } from '@angular/core';\n\n/**\n * Generated class for the EmailMenuPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-email-menu',\n  templateUrl: 'email-menu.html',\n  providers: [EmailService]\n})\nexport class EmailMenuPage {\n  root = 'EmailPage';\n  account_list = [];\n  user_id;\n  tabs;\n  account_id;\n  unseen_count;\n  folder_list;\n  label_list;\n  tree: TreeModel\n  showLabel = false;\n  constructor(public navCtrl: NavController, public navParams: NavParams, public emailService: EmailService,\n    public events: Events, public storage: Storage, public menu: MenuController) {\n    this.tabs = document.getElementsByClassName('tabbar').item(0);\n    events.subscribe('emailMenu', (data) => {\n      console.log(\"接收了\")\n      this.account_list = data;\n      if (this.account_list) {\n        this.account_id = this.account_list[0].id\n      }\n      console.log(this.account_list)\n    });\n    events.subscribe('label_folder', (data) => {\n      this.unseen_count = data.unseen_count\n      this.tree = {\n        value: '文件夹',\n        id: '',\n        children: this.tranFolderToTree(data.folder_list, 0)\n      }\n      console.log(this.tree)\n      this.label_list = data.label_list\n      this.changeLabelColor()\n    });\n  }\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad FriendsPage');\n    // let menus = this.menu.getMenus()\n    // if(menus.length>1){\n    //   for(let i=0;i<menus.length;i++){\n    //     menus[i].id\n    //   }\n    // }\n  }\n\n  ionViewDidLeave() {\n    // this.events.unsubscribe('emailMenu');\n    // this.events.unsubscribe('label_folder');\n  }\n\n  tranFolderToTree(folders_list, id) {\n    let folders = this.getFolderListByPid(folders_list, id)\n    let child = []\n    for (let i = 0; i < folders.length; i++) {\n      let bomItem: TreeModel = { value: \"\", children: [], id: '' };\n      bomItem.value = folders[i].name\n      bomItem.id = folders[i].id\n      if (this.tranFolderToTree(folders_list, folders[i].id).length > 0) {\n\n        bomItem.children = this.tranFolderToTree(folders_list, folders[i].id)\n      } else {\n        bomItem.children = undefined\n      }\n      child.push(bomItem)\n    }\n    return child\n  }\n\n  getFolderListByPid(folders, pid) {\n    let list = []\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].pId == pid) {\n        list.push(folders[i])\n      }\n    }\n    return list\n  }\n\n  transFolders(folder_list) {\n    let children = []\n\n\n    // this.id = this.id + 1;\n    // bomItem.value = bom.name + \"      \" + (bom.process_id[1] ? bom.process_id[1] : \"\") + \"      \" + (bom.qty ? bom.qty : \"\");\n    // if (bom.bom_ids && bom.bom_ids.length > 0) {\n    //   for (let item of bom.bom_ids) {\n    //     {\n    //       bomItem.children.push(this.analaysisBom(item))\n    //     }\n    //   }\n    // } else {\n    //   bomItem.children = undefined;\n    // }\n    // return bomItem;\n  }\n\n\n  click_box(email_type, state_type, event, data_id = '') {\n    this.menu.close()\n    let elements = document.getElementsByClassName('box_item')\n    for (let i = 0; i < elements.length; i++) {\n      let class_list = elements[i].classList\n      class_list.remove('box_item_choose')\n    }\n    this.events.publish('click_envnt', this.account_id, email_type, state_type, data_id)\n    if (event!='') {\n      let target = event.target || event.srcElement;\n      this.getParentByClass(target).classList.add('box_item_choose')\n    }\n  }\n\n  getParentByClass(target) {\n    if (target.classList.contains('box_item')) {\n      return target\n    }\n    if (target.parentNode.classList.contains('box_item')) {\n      return target.parentNode\n    } else {\n      return this.getParentByClass(target.parentNode)\n    }\n  }\n\n\n\n  changeLabel() {\n    this.showLabel = !this.showLabel\n    this.changeLabelColor();\n  }\n  changeLabelColor() {\n    setTimeout(() => {\n      this.label_list.forEach(element => {\n        let node = document.getElementById('label_' + element.id);\n        if (node) {\n          node.setAttribute('style', 'background-color:' + element.color);\n        }\n      });\n    }, 10);\n  }\n\n  click_label(data_id) {\n    this.click_box('label', '', '', data_id)\n  }\n\n\n  closeMenu() {\n    console.log('closeMenu')\n    this.tabs['style'].display = 'flex';\n  }\n\n  openMenu() {\n    this.tabs['style'].display = 'none';\n  }\n\n  dragMenu() {\n    console.log('拖菜单')\n    this.tabs['style'].display = 'none';\n  }\n\n\n  chooseAccount(account_id) {\n    this.account_id = account_id\n    this.click_box('state', 'all_received', '')\n  }\n\n  // 文件夹选中\n  handleSelected(event) {\n    let id = event.node.id\n    let value = event.node.value\n    console.log(id)\n    console.log(value)\n    this.menu.close()\n    if (id) {\n      this.events.publish('click_envnt', this.account_id, 'folder', '', id)\n    } else {\n      this.events.publish('click_envnt', this.account_id, 'folder', '', '')\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email/email-menu/email-menu.ts","import {  TreeModule } from 'ng2-tree';\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EmailMenuPage } from './email-menu';\n\n@NgModule({\n  declarations: [\n    EmailMenuPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EmailMenuPage),TreeModule\n  ],\n})\nexport class EmailMenuPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email/email-menu/email-menu.module.ts","import { HttpService } from './../../providers/HttpService';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EmailService {\n    constructor(private httpService: HttpService) {\n\n    }\n\n    getAccountDetail(user_id) {\n        let body = JSON.stringify({\n            'uid': user_id,\n        });\n        return this.httpService.postBody('get_account_detail', body);\n    }\n\n    uploadAttachment(user_id,filename,data) {\n        let body = JSON.stringify({\n            'uid': user_id,\n            'name':filename,\n            'datas':data,\n        });\n        return this.httpService.postBody('rt_mail/upload_attachment', body, 2);\n    }\n\n    delete_attachment(id){\n        let body = JSON.stringify({\n            'id': id,\n        });\n        return this.httpService.postBodyNoLoading('rt_mail/delete_attachment', body, 2);\n    }\n\n\n    getEmailList(user_id, account_id, email_type, state_type,data_id, limit, offset) {\n        let body = JSON.stringify({\n            'uid': user_id,\n            'account_id': account_id,\n            'email_type': email_type,\n            'state_type': state_type,\n            'data_id':data_id,\n            'limit': limit,\n            'offset': offset\n        });\n        return this.httpService.postBody('get_email_list', body);\n    }\n\n    get_email_detail(id) {\n        let body = JSON.stringify({\n            'id': id\n        });\n        return this.httpService.postBody('rt_mail/get_email_detail', body, 2);\n    }\n\n\n    get_email_label_folder(account_id,user_id){\n        let body = JSON.stringify({\n            'account_id': account_id,\n            'uid':user_id\n        });\n        return this.httpService.postBodyNoLoading('rt_mail/get_email_label_folder', body, 2);\n    }\n\n\n    send_mail(user_id,account_id,email_to,email_cc,email_bcc,subject,body,attach_list,draft){\n        let send_body = JSON.stringify({\n            'uid':user_id,\n            'account_id':account_id,\n            'email_to': email_to,\n            'email_cc':email_cc,\n            'email_bcc':email_bcc,\n            'subject':subject,\n            \"body_html\":body,\n            'attachment_ids':attach_list,\n            'draft':draft\n        });\n        return this.httpService.postBodyNoLoading('rt_mail/email_sent', send_body, 2);\n\n    }\n\n\n    get_contact_list(uid){\n        let body = JSON.stringify({\n            'uid':uid,\n        });\n        return this.httpService.postBodyNoLoading('rt_mail/get_contact_list', body, 2);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email/emailService.ts"],"sourceRoot":""}