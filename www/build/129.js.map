{"version":3,"sources":["../../src/pages/change-password/change-password.ts","../../src/pages/change-password/change-password.module.ts","webpack:///./src/pages/login/loginService.ts?a00d"],"names":[],"mappings":"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","file":"129.js","sourcesContent":["import { HttpService } from './../../providers/HttpService';\nimport { Storage } from '@ionic/storage';\nimport { AlertController } from 'ionic-angular/components/alert/alert-controller';\nimport { LoginService } from './../login/loginService';\nimport { NavParams } from 'ionic-angular/navigation/nav-params';\nimport { NavController, IonicPage } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { StatusBar } from '@ionic-native/status-bar';\n\n/**\n * Generated class for the ChangePasswordPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-change-password',\n  templateUrl: 'change-password.html',\n  providers: [LoginService,]\n})\nexport class ChangePasswordPage {\n  confirm_pwd;\n  new_password;\n  old_pwd;\n  dbname;\n  user_id\n  email;\n  remerberPassword;\n  is_me;\n\n  constructor(public navCtrl: NavController,public statusBar:StatusBar, public navParams: NavParams, private loginservice: LoginService,\n    public ctrl: AlertController, public storage: Storage) {\n    this.storage.get(\"user_psd\").then(res => {\n      if (res) {\n        this.dbname = res.db_name\n        this.email = res.user_email\n      }\n    })\n    // this.storage.get(\"user\").then((res) => {\n    //   if (res.result) {\n    //     this.user_id = res.result.res_data.user_id\n    //   }\n    // });\n    this.storage.get(\"login\").then(res => {\n      if (res) {\n        this.remerberPassword = res.remerberPassword\n      }\n    })\n    this.is_me=this.navParams.get('is_me')\n  }\n\n  ionViewWillEnter(){\n    this.statusBar.backgroundColorByHexString(\"#2597ec\");\n    this.statusBar.styleLightContent();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ChangePasswordPage');\n  }\n\n\n  finish() {\n    this.loginservice.change_password(this.old_pwd, this.new_password, this.confirm_pwd, this.dbname, HttpService.user_id).then(res => {\n      console.log(res)\n      if (res.result.new_password) {\n        this.ctrl.create({\n          title: '提示',\n          subTitle: '密码修改成功',\n          buttons: [{\n            text: '确定',\n            handler: () => {\n              this.loginservice.toLogin(this.email, this.new_password, this.dbname, 'value')\n                .then(res => {\n                  console.log(res);\n                  if (res.result && res.result.res_code == 1) {\n                    HttpService.user_id = res.result.res_data.user_id;\n                    HttpService.user = res.result.res_data;\n                    this.storage.set(\"user_psd\", {\n                      user_email: this.email,\n                      user_psd: this.new_password,\n                      db_name: this.dbname,\n                      url: HttpService.appUrl\n                    })\n                    if (this.remerberPassword) {\n                      this.storage.get(\"history_users\").then(res => {\n                        if (res) {\n                          let arr = res\n                          let need_add = true;\n                          let index = 0;\n                          for (let item of arr) {\n\n                            if (item.email == this.email) {\n                              arr.splice(index, 1);\n                              arr.push({\n                                email: this.email,\n                                password: this.new_password,\n                              })\n                              need_add = false;\n                              break;\n                            }\n                            index = index + 1;\n                          }\n                          if (need_add) {\n                            arr.push({\n                              email: this.email,\n                              password: this.new_password,\n                            })\n                          }\n                          this.storage.set(\"history_users\", arr);\n                        }\n                        else {\n                          let arr = []\n                          arr.push({\n                            email: this.email,\n                            password: this.new_password,\n                          })\n                          this.storage.set(\"history_users\", arr);\n                        }\n                      })\n                    }\n                    this.storage.set(\"user\", res).then(() => {\n                      if(this.is_me){\n                        this.navCtrl.pop()\n                      }else{\n                        this.navCtrl.setRoot('NewTabsPage');\n                      }\n                      // this.jpush.setAlias(res.result.res_data.user_id);\n                    });\n                  }\n                  else if (res.result && res.result.res_code == -1) {\n                    alert(res.result.res_data.error);\n                  }\n                })\n            }\n          }\n          ]\n        }).present();\n      } else {\n        this.ctrl.create({\n          title: res.result.title,\n          subTitle: res.result.error,\n          buttons: [{\n            text: '确定',\n          }\n          ]\n        }).present();\n      }\n    })\n  }\n\n  goBack() {\n    this.navCtrl.pop()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChangePasswordPage } from './change-password';\n\n@NgModule({\n  declarations: [\n    ChangePasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChangePasswordPage),\n  ],\n})\nexport class ChangePasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.module.ts","import { Injectable } from '@angular/core';\nimport { APP_SERVER_URL, APP_SERVER_URL_T } from './../../providers/Constants';\nimport { HttpService } from '../../providers/HttpService';\n\n@Injectable()\nexport class LoginService {\n    constructor(private httpService: HttpService) {\n\n    }\n\n    getDBInfo() {\n        return this.httpService.getNoLoading('get_db_list', null,1);\n    }\n\n    toLogin(logins,passwords,dbs,app_version) {\n        let body = JSON.stringify({\n            login: logins,\n            password: passwords,\n            db: dbs,\n            app_version:app_version,\n        });\n        return this.httpService.postBodyNoLoading('login', body,1);\n    }\n\n    change_password(old_psw,new_psw,confirm_psw,db_name,user_id){\n        let body = JSON.stringify({\n            old_psw: old_psw,\n            new_psw:new_psw,\n            confirm_psw:confirm_psw,\n            uid:user_id,\n            db_name :db_name\n        }\n    );\n        return this.httpService.postBody('web/session/change_password_oa', body,2);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/loginService.ts"],"sourceRoot":""}