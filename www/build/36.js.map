{"version":3,"sources":["../../src/pages/work-bench/attendace-recoup/attendance-recoup-auto.ts","../../src/pages/work-bench/attendace-recoup/attendace-recoup.ts","../../src/pages/work-bench/attendace-recoup/attendace-recoup.module.ts","webpack:///./node_modules/ionic2-auto-complete/index.js?aeb2********************","../../src/pages/work-bench/attendace-recoup/attendanceService.ts"],"names":[],"mappings":"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AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB,6BAA6B,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB,moBAAmoB,uBAAuB,orCAAorC,sBAAsB,sgBAAsgB,iNAAiN,OAAO,mFAAmF,6HAA6H,mBAAmB;AACryF;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,sBAAsB,6DAAc;AACpC,iB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","file":"36.js","sourcesContent":["import {AutoCompleteService} from 'ionic2-auto-complete';\nimport { Http } from '@angular/http';\nimport {Injectable} from \"@angular/core\";\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class AttendanceAutoService implements AutoCompleteService {\n  labelAttribute = \"name\";\n\n  constructor(private http:Http) {\n\n  }\n  getResults(keyword:string) {\n    //   this.labelAttribute = keyword;\n      console.log(keyword);\n      let obj1 = {\n          name:\"\",\n          id:1,\n      }\n      let obj2 = {\n          name:\"\",\n          id:2,\n      }\n      let arr = [];\n      obj1.name = \"搜 单号：\"+keyword;\n      arr.push(obj1);\n      obj2.name = \"搜 申请人：\" +keyword;\n      arr.push(obj2);\n    return arr;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/work-bench/attendace-recoup/attendance-recoup-auto.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ActionSheetController,AlertController } from 'ionic-angular';\nimport { AttendanceAutoService } from './attendance-recoup-auto'\nimport { Storage } from '@ionic/storage';\nimport { AttendanceService} from './attendanceService';\ndeclare let cordova: any;\n\n/**\n * Generated class for the AttendaceRecoupPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-attendace-recoup',\n  templateUrl: 'attendace-recoup.html',\n  providers: [AttendanceAutoService,AttendanceService],\n})\nexport class AttendaceRecoupPage {\n  // inner_type = 'me'\n  inner_type = 'wait_me'\n  me_list = []\n  wait_me_list = []\n  is_manager = false\n  user_id;\n  constructor(public navCtrl: NavController, public navParams: NavParams,public attendanceAutoService: AttendanceAutoService,\n              public storage:Storage,public attendanceService:AttendanceService) {\n      \n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AttendaceRecoupPage');\n  }\n\n  ionViewWillEnter() {\n    this.storage.get('user')\n      .then(res => {\n        this.user_id = res.result.res_data.user_id\n        this.attendanceService.get_is_department(res.result.res_data.user_id).then(result => {\n            if (result.result.res_data && result.result.res_code == 1) {\n              this.is_manager = result.result.res_data.is_manager\n            }\n            if (this.inner_type == 'wait_me')\n            {\n              this.click_wait_me()\n            }\n            else\n            {\n              this.click_me()\n            }\n          }\n        )\n      }\n      )\n  }\n\n  panEvent($event) {\n    cordova.plugins.Keyboard.close();\n  }\n\n  click_me(){\n    this.inner_type = 'me'\n    this.me_list = []\n    this.attendanceService.get_all_edit_card(this.user_id,false).then(res => {\n      console.log(res)\n                if (res.result.res_data && res.result.res_code == 1) {\n                    console.log(res.result.res_data)\n                    this.me_list = res.result.res_data\n                }\n              })\n  }\n\n  click_wait_me(){\n     this.inner_type = 'wait_me'\n     this.wait_me_list = []\n     this.attendanceService.get_all_edit_card(this.user_id,true).then(my_data => {\n                if (my_data.result.res_data && my_data.result.res_code == 1) {\n                    this.wait_me_list = my_data.result.res_data\n                }\n              })         \n  }\n\n  itemClearSelected(event){\n    if (this.inner_type == 'wait_me')\n            {\n              this.click_wait_me()\n            }\n            else\n            {\n              this.click_me()\n            }\n  }\n\n  itemSelected(event) {\n    let type;\n    let search_text;\n    if (event.id == 1) {\n      type = \"rt_name\";\n      search_text = event.name.replace(\"搜 单号：\", \"\")\n    }\n    else if (event.id == 2) {\n      type = \"rt_employee_id\";\n      search_text = event.name.replace(\"搜 申请人：\", \"\")\n    }\n    this.wait_me_list = []\n    this.attendanceService.search_edit_card(type,search_text,this.user_id).then(res => {\n      if (res.result.res_data && res.result.res_code == 1) {\n        this.wait_me_list = res.result.res_data\n      }\n    })\n  }\n\n  approval_detail(item){\n    this.navCtrl.push('AttendanceRecoupDetailPage',{\n      data_item:item,\n    })\n  }\n\n  approval_detail_no_approve(item){\n    this.navCtrl.push('AttendanceRecoupDetailPage',{\n      data_item:item,\n    })\n  }\n\n  changeDate(date){\n    // let new_date = new Date(date.replace(' ', 'T') + 'Z').getTime();\n    return date;\n  }\n\n  click_submit(){\n    this.navCtrl.push('AttendanceRecoupCreatePage')\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/work-bench/attendace-recoup/attendace-recoup.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AttendaceRecoupPage } from './attendace-recoup';\nimport { AutoCompleteModule } from 'ionic2-auto-complete';\n@NgModule({\n  declarations: [\n    AttendaceRecoupPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AttendaceRecoupPage),AutoCompleteModule\n  ],\n})\nexport class AttendaceRecoupPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/work-bench/attendace-recoup/attendace-recoup.module.ts","import { Component, EventEmitter, Injectable, Input, NgModule, Output, Pipe, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { IonicModule } from 'ionic-angular';\n\n// searchbar default options\nvar defaultOpts = {\n    cancelButtonText: 'Cancel',\n    showCancelButton: false,\n    debounce: 250,\n    placeholder: '搜索',\n    autocomplete: 'off',\n    autocorrect: 'off',\n    spellcheck: 'off',\n    type: 'search',\n    value: '',\n    noItems: '',\n    clearOnEdit: false,\n    clearInput: false\n};\nvar AutoCompleteComponent = (function () {\n    /**\n     * create a new instace\n     */\n    function AutoCompleteComponent() {\n        this.hideListOnSelection = true;\n        this.showListChanged = false;\n        this.keyword = null;\n        this.suggestions = [];\n        this._showList = false;\n        this.itemSelected = new EventEmitter();\n        this.itemClearSelected = new EventEmitter();\n        this.itemsShown = new EventEmitter();\n        this.itemsHidden = new EventEmitter();\n        this.ionAutoInput = new EventEmitter();\n        this.autoFocus = new EventEmitter();\n        this.autoBlur = new EventEmitter();\n        this.options = {};\n        // set default options\n        this.defaultOpts = defaultOpts;\n    }\n    Object.defineProperty(AutoCompleteComponent.prototype, \"showList\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._showList;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._showList === value) {\n                return;\n            }\n            this._showList = value;\n            this.showListChanged = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.ngAfterViewChecked = function () {\n        if (this.showListChanged) {\n            this.showListChanged = false;\n            this.showList ? this.itemsShown.emit() : this.itemsHidden.emit();\n        }\n    };\n    /**\n     * get items for auto-complete\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.getItems = function () {\n        var _this = this;\n        var /** @type {?} */ result;\n        if (this.showResultsFirst && !this.keyword) {\n            this.keyword = '';\n        }\n        else if (this.keyword.trim() === '') {\n            this.suggestions = [];\n            return;\n        }\n        if (typeof this.dataProvider === 'function') {\n            result = this.dataProvider(this.keyword);\n        }\n        else {\n            result = this.dataProvider.getResults(this.keyword);\n        }\n        // if result is instanceof Subject, use it asObservable\n        if (result instanceof Subject) {\n            result = result.asObservable();\n        }\n        // if query is async\n        if (result instanceof Observable) {\n            result\n                .subscribe(function (results) {\n                _this.suggestions = results;\n                _this.showItemList();\n            }, function (error) { return console.error(error); });\n        }\n        else {\n            this.suggestions = result;\n            this.showItemList();\n        }\n        // emit event\n        this.ionAutoInput.emit(this.keyword);\n    };\n    /**\n     * show item list\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.showItemList = function () {\n        this.showList = true;\n    };\n    /**\n     * hide item list\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.hideItemList = function () {\n        this.showList = this.alwaysShowList;\n    };\n    /**\n     * select item from list\n     *\n     * @param {?} selection\n     *\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.select = function (selection) {\n        // this.keyword = this.dataProvider.labelAttribute == null || selection[this.dataProvider.labelAttribute] == null\n        //     ? selection : selection[this.dataProvider.labelAttribute];\n        // if (this.hideListOnSelection) {\n        //     this.hideItemList();\n        // }\n        // // emit selection event\n        this.hideItemList();\n        this.itemSelected.emit(selection);\n        this.selection = selection;\n    };\n    /**\n     * get current selection\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.getSelection = function () {\n        return this.selection;\n    };\n    /**\n     * get current input value\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.getValue = function () {\n        return this.keyword;\n    };\n    /**\n     * set current input value\n     * @param {?} value\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.setValue = function (value) {\n        this.keyword = value;\n        return;\n    };\n    /**\n     * /**\n     * clear current input value\n     * @param {?=} hideItemList\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.clearValue = function (hideItemList) {\n        if (hideItemList === void 0) { hideItemList = false; }\n        this.keyword = null;\n        this.selection = null;\n        if (hideItemList) {\n            this.hideItemList();\n            this.itemClearSelected.emit(true)\n        }\n        return;\n    };\n    /**\n     * set focus of searchbar\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.setFocus = function () {\n        if (this.searchbarElem) {\n            this.searchbarElem.setFocus();\n        }\n    };\n    /**\n     * fired when the input focused\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.onFocus = function () {\n        this.autoFocus.emit();\n    };\n    /**\n     * fired when the input focused\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.onBlur = function () {\n        this.autoBlur.emit();\n    };\n    /**\n     * handle document click\n     * @param {?} event\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.documentClickHandler = function (event) {\n        if ((this.searchbarElem\n            && !this.searchbarElem._elementRef.nativeElement.contains(event.target))\n            ||\n                (!this.inputElem && this.inputElem._elementRef.nativeElement.contains(event.target))) {\n            this.hideItemList();\n        }\n    };\n    return AutoCompleteComponent;\n}());\nAutoCompleteComponent.decorators = [\n    { type: Component, args: [{\n                host: {\n                    '(document:click)': 'documentClickHandler($event)',\n                },\n                template: \"\\n      <ion-input\\n              #inputElem\\n              (keyup)=\\\"getItems($event)\\\"\\n              (tap)=\\\"showResultsFirst && getItems()\\\"\\n              [(ngModel)]=\\\"keyword\\\"\\n              [placeholder]=\\\"options.placeholder == null ? defaultOpts.placeholder : options.placeholder\\\"\\n              [type]=\\\"options.type == null ? defaultOpts.type : options.type\\\"\\n              [clearOnEdit]=\\\"options.clearOnEdit == null ? defaultOpts.clearOnEdit : options.clearOnEdit\\\"\\n              [clearInput]=\\\"options.clearInput == null ? defaultOpts.clearInput : options.clearInput\\\"\\n              [ngClass]=\\\"{'hidden': !useIonInput}\\\"\\n              (ionFocus)=\\\"onFocus()\\\"\\n              (ionBlur)=\\\"onBlur()\\\"\\n      >\\n      </ion-input>\\n      <ion-searchbar\\n              #searchbarElem\\n              (ionInput)=\\\"getItems($event)\\\"\\n              (tap)=\\\"showResultsFirst && getItems()\\\"\\n              [(ngModel)]=\\\"keyword\\\"\\n              [cancelButtonText]=\\\"options.cancelButtonText == null ? defaultOpts.cancelButtonText : options.cancelButtonText\\\"\\n              [showCancelButton]=\\\"options.showCancelButton == null ? defaultOpts.showCancelButton : options.showCancelButton\\\"\\n              [debounce]=\\\"options.debounce == null ? defaultOpts.debounce : options.debounce\\\"\\n              [placeholder]=\\\"options.placeholder == null ? defaultOpts.placeholder : options.placeholder\\\"\\n              [autocomplete]=\\\"options.autocomplete == null ? defaultOpts.autocomplete : options.autocomplete\\\"\\n              [autocorrect]=\\\"options.autocorrect == null ? defaultOpts.autocorrect : options.autocorrect\\\"\\n              [spellcheck]=\\\"options.spellcheck == null ? defaultOpts.spellcheck : options.spellcheck\\\"\\n              [type]=\\\"options.type == null ? defaultOpts.type : options.type\\\"\\n              [ngClass]=\\\"{'hidden': useIonInput}\\\"\\n              (ionClear)=\\\"clearValue(true)\\\"\\n              (ionFocus)=\\\"onFocus()\\\"\\n              (ionBlur)=\\\"onBlur()\\\"\\n      >\\n      </ion-searchbar>\\n      <ng-template #defaultTemplate let-attrs=\\\"attrs\\\">\\n          <span [innerHTML]='(attrs.labelAttribute ? attrs.data[attrs.labelAttribute] : attrs.data) | boldprefix:attrs.keyword'></span>\\n      </ng-template>\\n      <ul *ngIf=\\\"suggestions.length > 0 && showList\\\">\\n          <li *ngFor=\\\"let suggestion of suggestions\\\" (tap)=\\\"select(suggestion);$event.srcEvent.stopPropagation()\\\">\\n              <ng-template\\n                      [ngTemplateOutlet]=\\\"template || defaultTemplate\\\"\\n                      [ngOutletContext]=\\\"\\n                        {attrs:{ data: suggestion, keyword: keyword, labelAttribute: dataProvider.labelAttribute }}\\\"></ng-template>\\n          </li>\\n      </ul>\\n      <p *ngIf=\\\"suggestions.length == 0 && showList && options.noItems\\\">{{ options.noItems }}</p>\\n  \",\n                selector: 'ion-auto-complete'\n            },] },\n];\n/**\n * @nocollapse\n */\nAutoCompleteComponent.ctorParameters = function () { return []; };\nAutoCompleteComponent.propDecorators = {\n    'dataProvider': [{ type: Input },],\n    'options': [{ type: Input },],\n    'keyword': [{ type: Input },],\n    'showResultsFirst': [{ type: Input },],\n    'alwaysShowList': [{ type: Input },],\n    'hideListOnSelection': [{ type: Input },],\n    'template': [{ type: Input },],\n    'useIonInput': [{ type: Input },],\n    'autoFocus': [{ type: Output },],\n    'autoBlur': [{ type: Output },],\n    'itemSelected': [{ type: Output },],\n    'itemClearSelected': [{ type: Output },],\n    'itemsShown': [{ type: Output },],\n    'itemsHidden': [{ type: Output },],\n    'ionAutoInput': [{ type: Output },],\n    'searchbarElem': [{ type: ViewChild, args: ['searchbarElem',] },],\n    'inputElem': [{ type: ViewChild, args: ['inputElem',] },],\n};\n\n/**\n * bolds the beggining of the matching string in the item\n */\nvar BoldPrefix = (function () {\n    function BoldPrefix() {\n    }\n    /**\n     * @param {?} value\n     * @param {?} keyword\n     * @return {?}\n     */\n    BoldPrefix.prototype.transform = function (value, keyword) {\n        if (!keyword)\n            return value;\n        var /** @type {?} */ escaped_keyword = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        return value.replace(new RegExp(escaped_keyword, 'gi'), function (str) { return str.bold(); });\n    };\n    return BoldPrefix;\n}());\nBoldPrefix.decorators = [\n    { type: Pipe, args: [{\n                name: 'boldprefix'\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBoldPrefix.ctorParameters = function () { return []; };\n\nvar AutoCompleteModule = (function () {\n    function AutoCompleteModule() {\n    }\n    /**\n     * @return {?}\n     */\n    AutoCompleteModule.forRoot = function () {\n        return {\n            ngModule: AutoCompleteModule,\n            providers: []\n        };\n    };\n    return AutoCompleteModule;\n}());\nAutoCompleteModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    IonicModule\n                ],\n                declarations: [\n                    AutoCompleteComponent,\n                    BoldPrefix\n                ],\n                exports: [\n                    AutoCompleteComponent,\n                    BoldPrefix\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nAutoCompleteModule.ctorParameters = function () { return []; };\n\nexport { AutoCompleteModule, AutoCompleteComponent, BoldPrefix };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic2-auto-complete/index.js\n// module id = 739\n// module chunks = 3 5 8 9 12 13 14 16 17 20 21 22 23 26 27 28 29 30 31 34 35 36 37 38 41 51 52 79","import { HttpService } from './../../../providers/HttpService';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class AttendanceService {\n    constructor(private httpservice: HttpService) {\n\n    }\n\n    get_is_department(employee_id){\n        let body = JSON.stringify({\n            employee_id:employee_id,\n        });\n       return this.httpservice.postBodyNoLoading(\"get_is_department\",body);\n    }\n\n    get_all_edit_card(user_id,need_approve){\n        let body = JSON.stringify({\n            user_id:user_id,\n            need_approve:need_approve,\n        });\n       return this.httpservice.postBody(\"get_all_edit_card\",body);\n    }\n\n    get_today_attendance(day_start,day_end,user_id)\n    {\n        let body = JSON.stringify({\n            day_start:day_start,\n            day_end:day_end,\n            user_id:user_id,\n        });\n       return this.httpservice.postBody(\"get_today_attendance\",body);\n    }\n\n    save_edit_attendance(lines,user_id,month_time)\n    {\n        let body = JSON.stringify({\n            lines:lines,\n            user_id:user_id,\n            month_time:month_time,\n        });\n       return this.httpservice.postBody(\"save_edit_attendance\",body);\n    }\n\n    submit_edit_attendance(lines,user_id,month_time)\n    {\n        let body = JSON.stringify({\n            lines:lines,\n            user_id:user_id,\n            month_time:month_time,\n        });\n       return this.httpservice.postBody(\"submit_edit_attendance\",body);\n    }\n\n    refuse_edit_card(user_id,remark,edit_id){\n        let body = JSON.stringify({\n            remark:remark,\n            user_id:user_id,\n            edit_id:edit_id,\n        });\n       return this.httpservice.postBody(\"refuse_edit_card\",body);\n    }\n    \n    confirm_edit_card(user_id,remark,edit_id){\n        let body = JSON.stringify({\n            remark:remark,\n            user_id:user_id,\n            edit_id:edit_id,\n        });\n       return this.httpservice.postBody(\"confirm_edit_card\",body);\n    }\n\n    back_edit_card(user_id,remark,edit_id){\n        let body = JSON.stringify({\n            remark:remark,\n            user_id:user_id,\n            edit_id:edit_id,\n        });\n       return this.httpservice.postBody(\"back_edit_card\",body);\n    }\n\n    submit_edit_card(user_id,lines,edit_id,delete_arr){\n        let body = JSON.stringify({\n            lines:lines,\n            user_id:user_id,\n            edit_id:edit_id,\n            delete_arr:delete_arr,\n        });\n       return this.httpservice.postBody(\"submit_edit_card\",body);\n    }\n\n    save_edit_card(user_id,lines,edit_id,delete_arr){\n        let body = JSON.stringify({\n            lines:lines,\n            user_id:user_id,\n            edit_id:edit_id,\n            delete_arr:delete_arr,\n        });\n       return this.httpservice.postBody(\"save_edit_card\",body);\n    }\n\n    search_edit_card(type,search_text,user_id){\n        let body = JSON.stringify({\n            type:type,\n            search_text:search_text,\n            user_id:user_id,\n        });\n       return this.httpservice.postBody(\"search_edit_card\",body);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/work-bench/attendace-recoup/attendanceService.ts"],"sourceRoot":""}